/*
 * This file is generated by jOOQ.
 */
package it.trackme.jooq.generated.tables.records;


import it.trackme.jooq.generated.tables.Alimento;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlimentoRecord extends UpdatableRecordImpl<AlimentoRecord> implements Record6<Integer, String, Integer, Float, Float, Float> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>alimento.idAlimento</code>.
     */
    public void setIdalimento(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>alimento.idAlimento</code>.
     */
    public Integer getIdalimento() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>alimento.nome</code>.
     */
    public void setNome(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>alimento.nome</code>.
     */
    public String getNome() {
        return (String) get(1);
    }

    /**
     * Setter for <code>alimento.calorie</code>.
     */
    public void setCalorie(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>alimento.calorie</code>.
     */
    public Integer getCalorie() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>alimento.carbo</code>.
     */
    public void setCarbo(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>alimento.carbo</code>.
     */
    public Float getCarbo() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>alimento.proteine</code>.
     */
    public void setProteine(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>alimento.proteine</code>.
     */
    public Float getProteine() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>alimento.grassi</code>.
     */
    public void setGrassi(Float value) {
        set(5, value);
    }

    /**
     * Getter for <code>alimento.grassi</code>.
     */
    public Float getGrassi() {
        return (Float) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Integer, Float, Float, Float> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, Integer, Float, Float, Float> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Alimento.ALIMENTO.IDALIMENTO;
    }

    @Override
    public Field<String> field2() {
        return Alimento.ALIMENTO.NOME;
    }

    @Override
    public Field<Integer> field3() {
        return Alimento.ALIMENTO.CALORIE;
    }

    @Override
    public Field<Float> field4() {
        return Alimento.ALIMENTO.CARBO;
    }

    @Override
    public Field<Float> field5() {
        return Alimento.ALIMENTO.PROTEINE;
    }

    @Override
    public Field<Float> field6() {
        return Alimento.ALIMENTO.GRASSI;
    }

    @Override
    public Integer component1() {
        return getIdalimento();
    }

    @Override
    public String component2() {
        return getNome();
    }

    @Override
    public Integer component3() {
        return getCalorie();
    }

    @Override
    public Float component4() {
        return getCarbo();
    }

    @Override
    public Float component5() {
        return getProteine();
    }

    @Override
    public Float component6() {
        return getGrassi();
    }

    @Override
    public Integer value1() {
        return getIdalimento();
    }

    @Override
    public String value2() {
        return getNome();
    }

    @Override
    public Integer value3() {
        return getCalorie();
    }

    @Override
    public Float value4() {
        return getCarbo();
    }

    @Override
    public Float value5() {
        return getProteine();
    }

    @Override
    public Float value6() {
        return getGrassi();
    }

    @Override
    public AlimentoRecord value1(Integer value) {
        setIdalimento(value);
        return this;
    }

    @Override
    public AlimentoRecord value2(String value) {
        setNome(value);
        return this;
    }

    @Override
    public AlimentoRecord value3(Integer value) {
        setCalorie(value);
        return this;
    }

    @Override
    public AlimentoRecord value4(Float value) {
        setCarbo(value);
        return this;
    }

    @Override
    public AlimentoRecord value5(Float value) {
        setProteine(value);
        return this;
    }

    @Override
    public AlimentoRecord value6(Float value) {
        setGrassi(value);
        return this;
    }

    @Override
    public AlimentoRecord values(Integer value1, String value2, Integer value3, Float value4, Float value5, Float value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlimentoRecord
     */
    public AlimentoRecord() {
        super(Alimento.ALIMENTO);
    }

    /**
     * Create a detached, initialised AlimentoRecord
     */
    public AlimentoRecord(Integer idalimento, String nome, Integer calorie, Float carbo, Float proteine, Float grassi) {
        super(Alimento.ALIMENTO);

        setIdalimento(idalimento);
        setNome(nome);
        setCalorie(calorie);
        setCarbo(carbo);
        setProteine(proteine);
        setGrassi(grassi);
        resetChangedOnNotNull();
    }
}
