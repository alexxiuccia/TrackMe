/*
 * This file is generated by jOOQ.
 */
package it.trackme.jooq.generated.tables.records;


import it.trackme.jooq.generated.tables.Pasto;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PastoRecord extends UpdatableRecordImpl<PastoRecord> implements Record4<Integer, Integer, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pasto.idPasto</code>.
     */
    public void setIdpasto(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pasto.idPasto</code>.
     */
    public Integer getIdpasto() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pasto.idUtente</code>.
     */
    public void setIdutente(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pasto.idUtente</code>.
     */
    public Integer getIdutente() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>pasto.tipo</code>.
     */
    public void setTipo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pasto.tipo</code>.
     */
    public String getTipo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pasto.data</code>.
     */
    public void setData(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>pasto.data</code>.
     */
    public LocalDate getData() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Pasto.PASTO.IDPASTO;
    }

    @Override
    public Field<Integer> field2() {
        return Pasto.PASTO.IDUTENTE;
    }

    @Override
    public Field<String> field3() {
        return Pasto.PASTO.TIPO;
    }

    @Override
    public Field<LocalDate> field4() {
        return Pasto.PASTO.DATA;
    }

    @Override
    public Integer component1() {
        return getIdpasto();
    }

    @Override
    public Integer component2() {
        return getIdutente();
    }

    @Override
    public String component3() {
        return getTipo();
    }

    @Override
    public LocalDate component4() {
        return getData();
    }

    @Override
    public Integer value1() {
        return getIdpasto();
    }

    @Override
    public Integer value2() {
        return getIdutente();
    }

    @Override
    public String value3() {
        return getTipo();
    }

    @Override
    public LocalDate value4() {
        return getData();
    }

    @Override
    public PastoRecord value1(Integer value) {
        setIdpasto(value);
        return this;
    }

    @Override
    public PastoRecord value2(Integer value) {
        setIdutente(value);
        return this;
    }

    @Override
    public PastoRecord value3(String value) {
        setTipo(value);
        return this;
    }

    @Override
    public PastoRecord value4(LocalDate value) {
        setData(value);
        return this;
    }

    @Override
    public PastoRecord values(Integer value1, Integer value2, String value3, LocalDate value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PastoRecord
     */
    public PastoRecord() {
        super(Pasto.PASTO);
    }

    /**
     * Create a detached, initialised PastoRecord
     */
    public PastoRecord(Integer idpasto, Integer idutente, String tipo, LocalDate data) {
        super(Pasto.PASTO);

        setIdpasto(idpasto);
        setIdutente(idutente);
        setTipo(tipo);
        setData(data);
        resetChangedOnNotNull();
    }
}
