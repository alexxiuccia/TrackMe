/*
 * This file is generated by jOOQ.
 */
package it.trackme.jooq.generated.tables.records;


import it.trackme.jooq.generated.tables.Creazionepasto;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreazionepastoRecord extends TableRecordImpl<CreazionepastoRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>creazionePasto.idPasto</code>.
     */
    public void setIdpasto(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>creazionePasto.idPasto</code>.
     */
    public Integer getIdpasto() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>creazionePasto.idRicetta</code>.
     */
    public void setIdricetta(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>creazionePasto.idRicetta</code>.
     */
    public Integer getIdricetta() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>creazionePasto.quantità</code>.
     */
    public void setQuantità(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>creazionePasto.quantità</code>.
     */
    public Integer getQuantità() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Creazionepasto.CREAZIONEPASTO.IDPASTO;
    }

    @Override
    public Field<Integer> field2() {
        return Creazionepasto.CREAZIONEPASTO.IDRICETTA;
    }

    @Override
    public Field<Integer> field3() {
        return Creazionepasto.CREAZIONEPASTO.QUANTITÀ;
    }

    @Override
    public Integer component1() {
        return getIdpasto();
    }

    @Override
    public Integer component2() {
        return getIdricetta();
    }

    @Override
    public Integer component3() {
        return getQuantità();
    }

    @Override
    public Integer value1() {
        return getIdpasto();
    }

    @Override
    public Integer value2() {
        return getIdricetta();
    }

    @Override
    public Integer value3() {
        return getQuantità();
    }

    @Override
    public CreazionepastoRecord value1(Integer value) {
        setIdpasto(value);
        return this;
    }

    @Override
    public CreazionepastoRecord value2(Integer value) {
        setIdricetta(value);
        return this;
    }

    @Override
    public CreazionepastoRecord value3(Integer value) {
        setQuantità(value);
        return this;
    }

    @Override
    public CreazionepastoRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CreazionepastoRecord
     */
    public CreazionepastoRecord() {
        super(Creazionepasto.CREAZIONEPASTO);
    }

    /**
     * Create a detached, initialised CreazionepastoRecord
     */
    public CreazionepastoRecord(Integer idpasto, Integer idricetta, Integer quantità) {
        super(Creazionepasto.CREAZIONEPASTO);

        setIdpasto(idpasto);
        setIdricetta(idricetta);
        setQuantità(quantità);
        resetChangedOnNotNull();
    }
}
